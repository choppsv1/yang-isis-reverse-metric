# -*- fill-column: 69; org-confirm-babel-evaluate: nil -*-
# #+STARTUP: align entitiespretty hidestars inlineimages latexpreview noindent showall
#+OPTIONS: prop:nil title:t toc:t \n:nil ::t |:t ^:{} -:t *:t ':nil

#+TITLE: YANG Module for IS-IS Reverse Metric
#+AUTHOR: Christian Hopps
#+EMAIL: chopps@chopps.org
#+AFFILIATION: LabN Consulting, L.L.C.
#+RFC_NAME: draft-ietf-lsr-yang-isis-reverse-metric
#+RFC_VERSION: 01
#+RFC_XML_VERSION: 3

#+begin_abstract
This document defines a YANG module for managing the reverse metric
extension to the the intermediate system to intermediate system
routeing protocol.
#+end_abstract

* Introduction

This document defines a YANG module for managing the reverse metric
extension to the intermediate system to intermediate system routeing
protocol (IS-IS) [[RFC8500]], [[ISO10589]]. Please refer to [[RFC8500]] for the
description and definition of the functionality managed by this
module.

The YANG data model described in this document conforms to the
Network Management Datastore Architecture defined in [[RFC8342]].

* YANG Management
** YANG Tree

The following is the YANG tree diagram ([[RFC8340]]) for the IS-IS
reverse metric extension additions.

#+NAME: IS-IS Reverse Metric YANG tree diagram.
#+CALL: generate-tree(module=ietf-isis-reverse-metric)

#+RESULTS: IS-IS Reverse Metric YANG tree diagram.
#+begin_example

module: ietf-isis-reverse-metric
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis:
    +--rw reverse-metric
       +--rw enable-receive?   boolean
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis/isis:interfaces
            /isis:interface:
    +--rw reverse-metric
       +--rw reverse-metric
       |  +--rw metric?              isis:wide-metric
       |  +--rw flags
       |  |  +--rw whole-lan?           boolean
       |  |  +--rw allow-unreachable?   boolean
       |  +--rw exclude-te-metric?   boolean
       +--rw level-1
       |  +--rw reverse-metric
       |     +--rw metric?              isis:wide-metric
       |     +--rw flags
       |     |  +--rw whole-lan?           boolean
       |     |  +--rw allow-unreachable?   boolean
       |     +--rw exclude-te-metric?   boolean
       +--rw level-2
          +--rw reverse-metric
             +--rw metric?              isis:wide-metric
             +--rw flags
             |  +--rw whole-lan?           boolean
             |  +--rw allow-unreachable?   boolean
             +--rw exclude-te-metric?   boolean
  augment /rt:routing/rt:control-plane-protocols
            /rt:control-plane-protocol/isis:isis/isis:interfaces
            /isis:interface/isis:adjacencies/isis:adjacency:
    +--ro reverse-metric
       +--ro metric?      isis:wide-metric
       +--ro flags
       |  +--ro whole-lan?           boolean
       |  +--ro allow-unreachable?   boolean
       +--ro te-metric?   uint32
#+end_example

** YANG Module

The following is the YANG module for managing the IS-IS reverse
metric functionality defined in [[RFC8500]]. It imports modules from the
following RFCs: [[RFC8349]], [[I-D.ietf-isis-yang-isis-cfg]].

#+NAME: test-validate-module
#+CALL: validate-module(module=ietf-isis-reverse-metric)

#+NAME: ietf-isis-reverse-metric
#+HEADER: :var dep1=dep-babel :var dep2=fetch-yang-files
#+HEADER: :file ietf-isis-reverse-metric.yang :results output file silent :cache yes
#+begin_src yang :exports code
  module ietf-isis-reverse-metric {
    yang-version 1.1;
    namespace "urn:ietf:params:xml:ns:yang:ietf-isis-reverse-metric";
    prefix isis-rmetric;

    import ietf-routing {
      prefix rt;
      reference
        "RFC8349: A YANG Data Model for Routing Management (NMDA Version)";
    }
    import ietf-isis {
      prefix isis;
      reference
        "draft-ietf-isis-yang-isis-cfg-42:
         YANG Data Model for IS-IS Protocol";
    }

    organization
      "IETF LSR Working Group (LSR)";

    contact
      "WG Web:  <https://tools.ietf.org/wg/lsr/>
       WG List: <mailto:lsr@ietf.org>

       Author: Christian Hopps
               <mailto:chopps@chopps.org>";

    // RFC Ed.: replace XXXX with actual RFC number and
    // remove this note.

    description
      "This module defines the configuration and operational state for
       managing the IS-IS reverse metric functionality [RFC8500].

       Copyright (c) 2019 IETF Trust and the persons identified as
       authors of the code. All rights reserved.

       Redistribution and use in source and binary forms, with or
       without modification, is permitted pursuant to, and subject to
       the license terms contained in, the Simplified BSD License set
       forth in Section 4.c of the IETF Trust's Legal Provisions
       Relating to IETF Documents
       (https://trustee.ietf.org/license-info).

       This version of this YANG module is part of RFC XXXX
       (https://tools.ietf.org/html/rfcXXXX); see the RFC itself for
       full legal notices.";

    revision 2019-11-22 {
      description "Initial Revision";
      reference "RFC XXXX: YANG IS-IS Reverse Metric";
    }

    grouping reverse-metric-data {
      description "IS-IS reverse metric data.";
      leaf metric {
        type isis:wide-metric;
        description "The reverse metric value.";
        reference "RFC8500, Section 2";
      }

      container flags {
        description "The reverse metric flag values.";
        leaf whole-lan {
          type boolean;
          description
              "The 'whole LAN' or W-bit. If true then a DIS processing this
              reverse metric will add the metric value to all the nodes it
              advertises in the pseudo-node LSP for this interface.
              Otherwise it will only increment the metric for the
              advertising node in the pseudo-node LSP for this interface.";
          reference "RFC8500, Section 2";
        }
        leaf allow-unreachable {
          type boolean;
          description
              "The 'allow-unreachable' or U-bit. If true it allows the
              neighbor to increment the overall metric up to 2^24-1 rather
              than the lesser maximum of 2^24-2, and if done will cause
              traffic to stop using rather than avoid using the interface.";
          reference "RFC8500, Section 2";
        }
      }
    }

    grouping reverse-metric-if-config-data {
      description "IS-IS reverse metric config data.";
      container reverse-metric {
        description "IS-IS reverse metric data.";
        uses reverse-metric-data;
        leaf exclude-te-metric {
          type boolean;
          default false;
          description
            "If true and there is a TE metric defined for this
             interface then do not send the TE metric sub-TLV in the
             reverse metric TLV.";
          reference "RFC8500, Section 3.5";
        }
      }
    }

    grouping tlv16-reverse-metric {
      description "IS-IS reverse metric TLV data.";
      container reverse-metric {
        description "IS-IS reverse metric TLV data.";
        uses reverse-metric-data;
        leaf te-metric {
          type uint32;
          description "The TE metric value from the sub-TLV if present.";
          reference "RFC8500, Section 3.5";
        }
      }
    }

    augment "/rt:routing/rt:control-plane-protocols/"
      +"rt:control-plane-protocol/"
      +"isis:isis" {
      when "../rt:type = 'isis:isis'" {
        description
          "This augment is only valid when routing protocol instance
           type is 'isis'.";
      }

      description
        "The reverse metric configuration for an IS-IS instance.";

      container reverse-metric {
        description "Global reverse metric configuration.";
        leaf enable-receive {
          type boolean;
          default false;
          description
            "Enable handling of reverse metric announcements from
             neighbors. By default reverse metric handling is disabled
             and must be explicitly enabled through this configuration.";
        }
      }
    }

    augment "/rt:routing/rt:control-plane-protocols/"
      +"rt:control-plane-protocol/"
      +"isis:isis/isis:interfaces/isis:interface" {
      when "../../../rt:type = 'isis:isis'" {
        description
          "This augment is only valid when routing protocol instance
           type is 'isis'.";
      }

      description
        "The reverse metric configuration for an interface.";

      container reverse-metric {
        description "Announce a reverse metric to neighbors.";
        uses reverse-metric-if-config-data;
        container level-1 {
          description "Announce a reverse metric to level-1 neighbors.";
          uses reverse-metric-if-config-data;
        }
        container level-2 {
          description "Announce a reverse metric to level-2 neighbors.";
          uses reverse-metric-if-config-data;
        }
      }
    }
    augment "/rt:routing/rt:control-plane-protocols/"
      +"rt:control-plane-protocol/"
      +"isis:isis/isis:interfaces/isis:interface/"
      +"isis:adjacencies/isis:adjacency" {
      when "../../../../../rt:type = 'isis:isis'" {
        description
          "This augment is only valid when routing protocol instance
           type is 'isis'";
      }

      description
        "The reverse metric state advertised by an adjacency.";
      uses tlv16-reverse-metric;
    }
  }
#+end_src

* IANA Considerations
** Updates to the IETF XML Registry

This document registers a URI in the "IETF XML Registry" [[RFC3688]].
Following the format in [[RFC3688]], the following registration has been
made:

- URI :: urn:ietf:params:xml:ns:yang:ietf-isis-reverse-metric
- Registrant Contact :: The IESG.
- XML :: N/A; the requested URI is an XML namespace.

** Updates to the YANG Module Names Registry

This document registers one YANG module in the "YANG Module Names"
registry [[RFC6020]]. Following the format in [[RFC6020]], the following
registration has been made:

- name :: ietf-isis-reverse-metric
- namespace :: urn:ietf:params:xml:ns:yang:ietf-isis-reverse-metric
- prefix :: isis-rmetric
- reference :: RFC XXXX (RFC Ed.: replace XXX with actual RFC number and remove this note.)

* Security Considerations

The YANG module specified in this document defines a schema for data
that is designed to be accessed via network management protocols such
as NETCONF [[RFC6241]] or RESTCONF [[RFC8040]]. The lowest NETCONF layer
is the secure transport layer, and the mandatory-to-implement secure
transport is Secure Shell (SSH) [[RFC6242]]. The lowest RESTCONF layer
is HTTPS, and the mandatory-to-implement secure transport is TLS
[[RFC8446]].

The NETCONF access control model [[RFC8341]] provides the means to
restrict access for particular NETCONF or RESTCONF users to a
preconfigured subset of all available NETCONF or RESTCONF protocol
operations and content.

The YANG module defined in this document can enable, disable and
modify the behavior of metrics used by routing. For the security
implications regarding these types of changes consult the [[RFC8500]]
which defines the functionality.

There are a number of data nodes defined in this YANG module that are
writable/creatable/deletable (i.e., "config true", which is the
default). These data nodes may be considered sensitive or vulnerable
in some network environments. Write operations (e.g., edit-config) to
these data nodes without proper protection can have a negative effect
on network operations.

These are the subtrees and data nodes and their
sensitivity/vulnerability:

#+begin_example
Under "/rt:routing/rt:control-plane-protocols/" +
      "rt:control-plane-protocol/isis:isis"

  - /isis-rmetric:reverse-metric/isis-rmetric:enable-receive
#+end_example

#+begin_example
Under "/rt:routing/rt:control-plane-protocols/" +
      "rt:control-plane-protocol/isis:isis/" +
      "isis:interfaces/isis:interface/" +
      "isis-rmetric:reverse-metric"

  - /isis-rmetric:metric
  - /isis-rmetric:flags/isis-rmetric:whole-lan
  - /isis-rmetric:flags/isis-rmetric:allow-unreachable
  - /isis-rmetric:exclude-te-metric
#+end_example

#+begin_example
Under "/rt:routing/rt:control-plane-protocols/" +
      "rt:control-plane-protocol/isis:isis/" +
      "isis:interfaces/isis:interface/" +
      "isis:level-1/isis-rmetric:reverse-metric"

  - /isis-rmetric:metric
  - /isis-rmetric:flags/isis-rmetric:whole-lan
  - /isis-rmetric:flags/isis-rmetric:allow-unreachable
  - /isis-rmetric:exclude-te-metric
#+end_example

#+begin_example
Under "/rt:routing/rt:control-plane-protocols/" +
      "rt:control-plane-protocol/isis:isis/" +
      "isis:interfaces/isis:interface/" +
      "isis:level-2/isis-rmetric:reverse-metric"

  - /isis-rmetric:metric
  - /isis-rmetric:flags/isis-rmetric:whole-lan
  - /isis-rmetric:flags/isis-rmetric:allow-unreachable
  - /isis-rmetric:exclude-te-metric
#+end_example

Some of the readable data nodes in this YANG module may be considered
sensitive or vulnerable in some network environments.  It is thus
important to control read access (e.g., via get, get-config, or
notification) to these data nodes.  These are the subtrees and data
nodes and their sensitivity/vulnerability:

All nodes are under the following subtree, so that prefix will be
assume for each node description.

#+begin_example
Under "/rt:routing/rt:control-plane-protocols/" +
      "rt:control-plane-protocol/isis:isis/" +
      "isis:interfaces/isis:interface/" +
      "isis:adjacencies/isis:adjacency/" +
      "isis-rmetric:reverse-metric"

    - /isis-rmetric:metric
    - /isis-rmetric:flags/isis-rmetric:whole-lan
    - /isis-rmetric:flags/isis-rmetric:allow-unreachable
    - /isis-rmetric:te-metric
#+end_example

* Normative References
** ISO10589
   :PROPERTIES:
   :REF_URLXML: http://xml2rfc.ietf.org/public/rfc/bibxml-misc/reference.ISO.10589.1992.xml
   :END:
** RFC3688
** RFC6020
** RFC6241
** RFC6242
** RFC8040
** RFC8341
** RFC8342
** RFC8349
** RFC8446
** RFC8500
** I-D.ietf-isis-yang-isis-cfg

* Informative References
** RFC8340
* Examples
** Example Enable XML
Below is an example of YANG XML data to enable reverse metric processing.

#+NAME: test-enable-xml-example
#+CALL: validate-config(file=enable-xml-example, module=ietf-isis-reverse-metric, extra="/yang/iana-if-type.yang")

#+CAPTION: Example XML data to enable reverse metric processing.
#+NAME: enable-xml-example
#+begin_src xml :file test-enable-example.xml :results output code file silent :exports code
  <rt:routing
      xmlns:rt="urn:ietf:params:xml:ns:yang:ietf-routing"
      xmlns:isis="urn:ietf:params:xml:ns:yang:ietf-isis"
      xmlns:rm="urn:ietf:params:xml:ns:yang:ietf-isis-reverse-metric">
    <rt:control-plane-protocols>
      <rt:control-plane-protocol>
        <rt:type>isis:isis</rt:type>
        <rt:name>default</rt:name>
        <isis:isis>
          <isis:area-address>00</isis:area-address>
          <rm:reverse-metric>
            <rm:enable-receive>true</rm:enable-receive>
          </rm:reverse-metric>
        </isis:isis>
      </rt:control-plane-protocol>
    </rt:control-plane-protocols>
  </rt:routing>
#+end_src

** Example Use XML
Below is an example of YANG XML data for the ietf-isis-reverse-metric module.

#+NAME: test-use-xml-example
#+CALL: validate-config(file=xml-example, module=ietf-isis-reverse-metric, extra="/yang/iana-if-type.yang")

#+CAPTION: Example XML data for ietf-isis-reverse-metric module.
#+NAME: xml-example
#+begin_src xml :file test-use-xml-example.xml :results output code file silent :exports code
  <if:interfaces
      xmlns:if="urn:ietf:params:xml:ns:yang:ietf-interfaces"
      xmlns:ianaift="urn:ietf:params:xml:ns:yang:iana-if-type">
    <if:interface>
      <if:name>eth0</if:name>
      <if:type>ianaift:ethernetCsmacd</if:type>
    </if:interface>
  </if:interfaces>
  <rt:routing
      xmlns:rt="urn:ietf:params:xml:ns:yang:ietf-routing"
      xmlns:isis="urn:ietf:params:xml:ns:yang:ietf-isis"
      xmlns:rm="urn:ietf:params:xml:ns:yang:ietf-isis-reverse-metric">
    <rt:control-plane-protocols>
      <rt:control-plane-protocol>
        <rt:type>isis:isis</rt:type>
        <rt:name>default</rt:name>
        <isis:isis>
          <isis:area-address>00</isis:area-address>
          <isis:interfaces>
            <isis:interface>
              <isis:name>eth0</isis:name>
              <rm:reverse-metric>
                <rm:reverse-metric>
                  <rm:metric>
                    65535
                  </rm:metric>
                </rm:reverse-metric>
              </rm:reverse-metric>
            </isis:interface>
          </isis:interfaces>
        </isis:isis>
      </rt:control-plane-protocol>
    </rt:control-plane-protocols>
  </rt:routing>
#+end_src

** Example JSON

Below is an example of YANG XML data for the ietf-isis-reverse-metric module.

#+NAME: test-json-example
#+CALL: validate-config(file=json-example, module=ietf-isis-reverse-metric, extra="/yang/iana-if-type.yang")

#+CAPTION: Example JSON data for level-1 only reverse metric.
#+NAME: json-example
#+begin_src json :file test-json-example.json :results output code file silent :exports code
  {
    "ietf-interfaces:interfaces": {
      "interface": [
        {
          "name": "eth0",
          "type": "iana-if-type:ethernetCsmacd"
        }
      ]
    },
    "ietf-routing:routing": {
      "control-plane-protocols": {
        "control-plane-protocol": [
          {
            "type": "ietf-isis:isis",
            "name": "default",
            "ietf-isis:isis": {
              "area-address": [
                "00"
              ],
              "interfaces": {
                "interface": [
                  {
                    "name": "eth0",
                    "ietf-isis-reverse-metric:reverse-metric": {
                      "level-1": {
                        "reverse-metric": {
                          "metric": 65535,
                          "exclude-te-metric": true
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    }
  }
#+end_src

#+NAME: dep-babel
#+begin_src emacs-lisp :results none :exports none
    (org-babel-do-load-languages 'org-babel-load-languages '((shell . t)))
    (setq fill-column 69)
    (setq org-confirm-babel-evaluate nil)
#+end_src

#+name: fetch-yang-files
#+begin_src shell :results none silent :exports none
      curl -O https://raw.githubusercontent.com/YangModels/yang/master/experimental/ietf-extracted-YANG-modules/ietf-isis@2019-10-15.yang
      curl -O https://raw.githubusercontent.com/YangModels/yang/master/standard/ietf/RFC/ietf-routing-types@2017-12-04.yang
      curl -O https://raw.githubusercontent.com/YangModels/yang/master/standard/ietf/RFC/ietf-routing@2018-03-13.yang
#+end_src

#+NAME: generate-tree
#+HEADER: :var dep1=dep-babel
#+begin_src shell :results output verbatim replace :wrap example :exports none
  [ -d /yang ] || DOCKER="docker run --net=host -v $(pwd):/work labn/org-rfc"
  $DOCKER pyang --tree-line-length=69 -f tree ${module} 2> err.out;
#+end_src

#+NAME: validate-module
#+HEADER: :var dep1=dep-babel
#+begin_src bash :results output verbatim replace :wrap comment :exports none
  [ -d /yang ] || DOCKER="docker run --net=host -v $(pwd):/work labn/org-rfc"
  if ! $DOCKER pyang --lax-quote-checks -Werror --ietf $module 2>&1; then echo FAIL; fi
#+end_src

#+NAME: validate-config
#+HEADER: :var dep1=dep-babel
#+begin_src bash :results output verbatim replace :wrap comment :exports none
  [ -d /yang ] || DOCKER="docker run --net=host -v $(pwd):/work labn/org-rfc"
  LINT="$DOCKER yanglint -p /yang-drafts -p /yang --strict -t config"
  $LINT $extra $module ${file} 2>&1 || echo FAIL
#+end_src

#+NAME: validate-data
#+HEADER: :var dep1=dep-babel
#+begin_src bash :results output verbatim replace :wrap comment :exports none
  [ -d /yang ] || DOCKER="docker run --net=host -v $(pwd):/work labn/org-rfc"
  LINT="$DOCKER yanglint -p /yang-drafts -p /yang --strict -t data"
  $LINT $extra $module ${file} 2>&1 || echo FAIL
#+end_src
